{
  "Import React": {
    "prefix": "imr",
    "body": ["import React from 'react';\n"],
    "description": "Import React"
  },

  "Import ReactDOM": {
    "prefix": "imrd",
    "body": ["import ReactDOM from 'react-dom';"],
    "description": "Import ReactDOM"
  },

  "Import React, { useState }": {
    "prefix": "imrs",
    "body": [
      "import React, { useState } from 'react';\n"
    ],
    "description": "Import React, { useState }"
  },

  "Import React, { useState, useEffect }": {
    "prefix": "imrse",
    "body": [
      "import React, { useState, useEffect } from 'react';\n"
    ],
    "description": "Import React, { useState, useEffect }"
  },

  "Stateless Function Component": {
    "prefix": "sfc",
    "body": [
      "const $1 = ($2) => {",
      "\treturn ( $0 );",
      "}",
      " ",
      "export default $1;"
    ],
    "description": "Stateless Function Component"
  },

  "Function Syntax Component": {
    "prefix": "ffc",
    "body": [
      "function $1($2) {",
      "\treturn ( $0 );",
      "}",
      "",
      "export default $1;"
    ],
    "description": "Function Syntax Component"
  },

  "useEffect": {
    "prefix": "uef",
    "body": [
      "useEffect(() => {",
      "\t$1",
      "}, []);"
    ],
    "description": "useEffect Hook"
  },

  "getDerivedStateFromProps": {
    "prefix": "gds",
    "body": ["static getDerivedStateFromProps(nextProps, prevState) {", "\t$0", "}"],
    "description": "getDerivedStateFromProps"
  },

  "getSnapshotBeforeUpdate": {
    "prefix": "gsbu",
    "body": ["getSnapshotBeforeUpdate(prevProps, prevState) {", "\t$0", "}"],
    "description": "getSnapshotBeforeUpdate"
  },

  "Declare a new state variable using State Hook": {
    "prefix": "usf",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2);"],
    "description": "Declare a new state Variable using the State Hook. Hit Tab to apply CamelCase to function"
  },

  "render": {
    "prefix": "ren",
    "body": ["render() {", "\treturn (", "\t\t $0", "\t);", "}"],
    "description": "render"
  },

  "Higher Order Component": {
    "prefix": "hoc",
    "body": [
      "function $1($2) {",
      "\treturn class extends Component {",
      "\t\tconstructor(props) {",
      "\t\t\tsuper(props);",
      "\t\t}",
      " ",
      "\t\trender() {",
      "\t\t\treturn <$2 {...this.props} $0/>",
      "\t\t}",
      "\t}",
      "}"
    ],
    "description": "Higher Order Component"
  },

  "Context Provider": {
    "prefix": "cp",
    "body": [
      "export const $1 = React.createContext();",
      "",
      "const $1Provider = (props) => {",
      "\t// Initial Provider State",
      "\tconst state = {};",
      "",
      "\t// Reducer Function",
      "\tconst $2 = (state, action) => {",
      "\t\t",
      "\t};",
      "",
      "\treturn (",
      "\t\t<$1.Provider value={{state: state, $2}}>",
      "\t\t\t{props.children}",
      "\t\t</$1.Provider>",
      "\t);",
      "}",
      "",
      "export default $1Provider;"
    ],
    "description": "Context Provider"
  },
  
  "Class Property Function": {
    "prefix": "cpf",
    "body": [
      "$1 = (${2:e${TM_SELECTED_TEXT}}) => {",
      "\t $0",
      "};"
    ],
    "description": "Class Property Function"
  }
}
